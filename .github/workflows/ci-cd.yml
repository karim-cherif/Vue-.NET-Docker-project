name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "8.0.x"
  NODE_VERSION: "20"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore, Build and Test Backend
        run: |
          dotnet restore ./Back-End/Back-End.csproj
          dotnet build ./Back-End/Back-End.csproj --no-restore
          dotnet test ./Back-End/Back-End.csproj --no-build --verbosity normal
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./Front-End/package-lock.json"
      - name: Install and Build Frontend
        working-directory: ./Front-End
        run: |
          npm ci
          npm run build

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Back-End
          push: true
          tags: abdelkarim246/internship-back:latest
          cache-from: type=registry,ref=abdelkarim246/internship-back:latest
          cache-to: type=inline
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Front-End
          push: true
          tags: abdelkarim246/internship-front:latest
          cache-from: type=registry,ref=abdelkarim246/internship-front:latest
          cache-to: type=inline

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Update container apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az containerapp update --name myapp-back --resource-group internship-group --image abdelkarim246/internship-back:latest
            az containerapp update --name myapp-front --resource-group internship-group --image abdelkarim246/internship-front:latest

  notify:
    needs: [build-and-test, build-and-push-images, deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get commit information
        id: commit_info
        run: |
          echo "COMMIT_LOG=$(git log -n 5 --pretty=format:'- %h - %s (%an)' | sed ':a;N;$!ba;s/\n/\\n/g')" >> $GITHUB_OUTPUT
          echo "DIFF_SUMMARY=$(git diff --stat HEAD~1 HEAD | tail -n 1)" >> $GITHUB_OUTPUT
          echo "LATEST_COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "LATEST_COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "LATEST_COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')" >> $GITHUB_OUTPUT
      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        env:
          COMMIT_LOG: ${{ steps.commit_info.outputs.COMMIT_LOG }}
        with:
          server_address: smtp.sendgrid.net
          server_port: 465
          secure: true
          username: apikey
          password: ${{ secrets.SENDGRID_API_KEY }}
          subject: CI/CD Pipeline Status - ${{ github.repository }} - ${{ steps.commit_info.outputs.LATEST_COMMIT_HASH }}
          html_body: |
            <html>
            <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
              <h2 style="color: #0066cc;">CI/CD Pipeline Status for ${{ github.repository }}</h2>
              <p><strong>Latest Commit:</strong> ${{ steps.commit_info.outputs.LATEST_COMMIT_HASH }} - ${{ steps.commit_info.outputs.LATEST_COMMIT_MESSAGE }} (by ${{ steps.commit_info.outputs.LATEST_COMMIT_AUTHOR }})</p>
              
              <h3 style="color: #0066cc;">Status Summary:</h3>
              <ul>
                <li>Build and Test: <span style="color: ${{ needs.build-and-test.result == 'success' && '#2ecc71' || '#e74c3c' }};">${{ needs.build-and-test.result }}</span></li>
                <li>Build and Push Images: <span style="color: ${{ needs.build-and-push-images.result == 'success' && '#2ecc71' || '#e74c3c' }};">${{ needs.build-and-push-images.result }}</span></li>
                <li>Deploy: <span style="color: ${{ needs.deploy.result == 'success' && '#2ecc71' || '#e74c3c' }};">${{ needs.deploy.result }}</span></li>
              </ul>

              <h3 style="color: #0066cc;">Recent Changes:</h3>
              <pre style="background-color: #f4f4f4; padding: 10px; border-radius: 5px; white-space: pre-wrap;">{{ env.COMMIT_LOG | replace: '\n', '
              ' }}</pre>

              <p><strong>Changes Summary:</strong> ${{ steps.commit_info.outputs.DIFF_SUMMARY }}</p>

              <p>For more details, please visit: <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" style="color: #0066cc;">${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}</a></p>

              <hr style="border: none; border-top: 1px solid #ddd;">
              <p style="font-size: 0.8em; color: #666;">This is an automated message from your CI/CD pipeline.</p>
            </body>
            </html>
          to: ${{ secrets.EMAIL_RECIPIENTS }}
          from: CI/CD Pipeline <${{ secrets.SENDGRID_VERIFIED_SENDER }}>
