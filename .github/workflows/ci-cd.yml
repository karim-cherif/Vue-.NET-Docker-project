name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "8.0.x"
  NODE_VERSION: "20"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Restore, Build and Test Backend
        run: |
          dotnet restore ./Back-End/Back-End.csproj
          dotnet build ./Back-End/Back-End.csproj --no-restore
          dotnet test ./Back-End/Back-End.csproj --no-build --verbosity normal
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: "./Front-End/package-lock.json"
      - name: Install and Build Frontend
        working-directory: ./Front-End
        run: |
          npm ci
          npm run build

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Back-End
          push: true
          tags: abdelkarim246/internship-back:latest
          cache-from: type=registry,ref=abdelkarim246/internship-back:latest
          cache-to: type=inline
      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Front-End
          push: true
          tags: abdelkarim246/internship-front:latest
          cache-from: type=registry,ref=abdelkarim246/internship-front:latest
          cache-to: type=inline

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Update container apps
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az containerapp update --name myapp-back --resource-group internship-group --image abdelkarim246/internship-back:latest
            az containerapp update --name myapp-front --resource-group internship-group --image abdelkarim246/internship-front:latest

  notify:
    needs: [build-and-test, build-and-push-images, deploy]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit details
        id: commit_details
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)" >> $GITHUB_OUTPUT
          echo "COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "COMMIT_DATE=$(git log -1 --date=format:'%Y-%m-%d %H:%M:%S' --pretty=format:'%cd')" >> $GITHUB_OUTPUT

      - name: Get diff summary
        id: diff_summary
        run: |
          DIFF_SUMMARY=$(git diff --stat HEAD~1 HEAD | tail -n 1)
          echo "DIFF_SUMMARY=$DIFF_SUMMARY" >> $GITHUB_OUTPUT

      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.sendgrid.net
          server_port: 465
          secure: true
          username: apikey
          password: ${{ secrets.SENDGRID_API_KEY }}
          subject: "CI/CD Pipeline: ${{ github.repository }} - ${{ steps.commit_details.outputs.COMMIT_MESSAGE }}"
          body: |
            <h2>CI/CD Pipeline Notification</h2>
            <p><strong>Repository:</strong> ${{ github.repository }}</p>
            <p><strong>Branch:</strong> ${{ github.ref_name }}</p>
            <p><strong>Commit:</strong> <a href="${{ github.server_url }}/${{ github.repository }}/commit/${{ steps.commit_details.outputs.COMMIT_HASH }}">{{ steps.commit_details.outputs.COMMIT_HASH }}</a> - ${{ steps.commit_details.outputs.COMMIT_MESSAGE }}</p>
            <p><strong>Author:</strong> ${{ steps.commit_details.outputs.COMMIT_AUTHOR }}</p>
            <p><strong>Date:</strong> ${{ steps.commit_details.outputs.COMMIT_DATE }}</p>

            <h3>Pipeline Status</h3>
            <ul>
              <li><strong>Build and Test:</strong> ${{ needs.build-and-test.outputs.status }}</li>
              <li><strong>Build and Push Images:</strong> ${{ needs.build-and-push-images.outputs.status }}</li>
              <li><strong>Deploy:</strong> ${{ needs.deploy.outputs.status }}</li>
            </ul>

            <h3>Recent Changes</h3>
            <pre>{{ steps.commit_details.outputs.COMMIT_MESSAGE }}</pre>

            <h3>Summary of Changes</h3>
            <pre>{{ steps.diff_summary.outputs.DIFF_SUMMARY }}</pre>

            <p>For more details, please visit: <a href="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}">Pipeline Run</a></p>

            <hr>
            <p>This is an automated message from your CI/CD pipeline.</p>
          to: ${{ secrets.EMAIL_RECIPIENTS }}
          from: CI/CD Pipeline <${{ secrets.SENDGRID_VERIFIED_SENDER }}>
