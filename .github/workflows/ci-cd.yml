name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore ./Back-End/Back-End.csproj

      - name: Build
        run: dotnet build ./Back-End/Back-End.csproj --no-restore

      - name: Test
        run: dotnet test ./Back-End/Back-End.csproj --no-build --verbosity normal

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci
        working-directory: ./Front-End

      - name: Build Vue.js project
        run: npm run build
        working-directory: ./Front-End

  build-and-push-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./Back-End
          push: true
          tags: abdelkarim246/internship-back:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./Front-End
          push: true
          tags: abdelkarim246/internship-front:latest

  deploy:
    needs: build-and-push-images
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update backend container app
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp update \
              --name myapp-back \
              --resource-group internship-group \
              --image abdelkarim246/internship-back:latest

      - name: Update frontend container app
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az containerapp update \
              --name myapp-front \
              --resource-group internship-group \
              --image abdelkarim246/internship-front:latest

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit changes
        id: get_changes
        run: |
          COMMIT_LOG=$(git log -n 5 --pretty=format:"- %h - %s (%an)")
          echo "COMMIT_LOG<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get diff summary
        id: diff_summary
        run: |
          DIFF_SUMMARY=$(git diff --stat HEAD~1 HEAD | tail -n 1)
          echo "DIFF_SUMMARY=$DIFF_SUMMARY" >> $GITHUB_OUTPUT

      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.sendgrid.net
          server_port: 465
          secure: true
          username: apikey
          password: ${{ secrets.SENDGRID_API_KEY }}
          subject: CI/CD Pipeline Status for ${{ github.repository }}
          body: |
            CI/CD Pipeline for ${{ github.repository }} has completed.

            Status Summary:
            - Build and Test: ${{ needs.build-and-test.result }}
            - Build and Push Images: ${{ needs.build-and-push-images.result }}
            - Deploy: ${{ needs.deploy.result }}

            Recent Changes:
            ${{ steps.get_changes.outputs.COMMIT_LOG }}

            Changes Summary:
            ${{ steps.diff_summary.outputs.DIFF_SUMMARY }}

            For more details, please visit:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ---
            This is an automated message from your CI/CD pipeline.
          to: ${{ secrets.EMAIL_RECIPIENTS }}
          from: CI/CD Pipeline <${{ secrets.SENDGRID_VERIFIED_SENDER }}>
